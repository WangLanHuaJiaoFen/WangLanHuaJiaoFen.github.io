{
    "version": "https://jsonfeed.org/version/1",
    "title": "王兰花椒粉的秘密小窝 • All posts by \"技术/编程\" category",
    "description": "",
    "home_page_url": "http://wanglanhuajiaofen.fun",
    "items": [
        {
            "id": "http://wanglanhuajiaofen.fun/2024/07/27/docker/",
            "url": "http://wanglanhuajiaofen.fun/2024/07/27/docker/",
            "title": "Ubuntu23.10 docker安装与配置",
            "date_published": "2024-07-26T16:00:00.000Z",
            "content_html": "<h1 id=\"起始\"><a href=\"#起始\" class=\"headerlink\" title=\"起始\"></a>起始</h1><p>最近开始学docker了，感觉docker很厉害o(￣▽￣)ｄ可以很方便的部署各种环境。然鹅果不其然，配环境是一大问题┌(。Д。)┐<br>这里就简单整理下Ubuntu23.10 安装与配置docker的过程叭✧(≖ ◡ ≖)</p>\n<h2 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h2><p><a href=\"https://docs.docker.com/engine/install/ubuntu/#install-using-the-repository\">docker官网</a><br><a href=\"https://docker-practice.github.io/zh-cn/install/ubuntu.html\">Docker — 从入门到实践</a></p>\n<span id=\"more\"></span>\n\n<h2 id=\"系统要求\"><a href=\"#系统要求\" class=\"headerlink\" title=\"系统要求\"></a>系统要求</h2><p>docker要求较新的ubuntu版本，建议选择20.04之后的LTS Ubuntu。<br>我用的是Ubuntu23.10LTS。</p>\n<h2 id=\"卸载旧版本\"><a href=\"#卸载旧版本\" class=\"headerlink\" title=\"卸载旧版本\"></a>卸载旧版本</h2><p>无论是否存在旧版本都可以执行以下命令，以防万一。</p>\n<pre><code class=\"hljs bash\">sudo apt-get remove docker \\\n           docker-engine \\\n           docker.io</code></pre>\n<h2 id=\"前置步骤\"><a href=\"#前置步骤\" class=\"headerlink\" title=\"前置步骤\"></a>前置步骤</h2><pre><code class=\"hljs bash\">sudo apt-get update  <span class=\"hljs-comment\"># 更新可用软件包信息</span>\nsudo apt-get install ca-certificates curl <span class=\"hljs-comment\"># 安装ca证书和curl</span>\nsudo install -m 0755 -d /etc/apt/keyrings\ncurl -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker-archive-keyring.gpg <span class=\"hljs-comment\"># 添加软件源gpg密钥</span></code></pre>\n\n<h2 id=\"ubuntu换国内源\"><a href=\"#ubuntu换国内源\" class=\"headerlink\" title=\"ubuntu换国内源\"></a>ubuntu换国内源</h2><p>参考<a href=\"https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/\">清华大学开源软件镜像站</a>自行换源</p>\n<h2 id=\"使用apt安装docker\"><a href=\"#使用apt安装docker\" class=\"headerlink\" title=\"使用apt安装docker\"></a>使用apt安装docker</h2><pre><code class=\"hljs bash\">  <span class=\"hljs-comment\"># 添加docker源</span>\n  <span class=\"hljs-built_in\">echo</span> \\\n<span class=\"hljs-string\">&quot;deb [arch=<span class=\"hljs-subst\">$(dpkg --print-architecture signed-by=/etc/apt/keyrings/docker-archive-keyring.gpg] https://mirrors.aliyun.com/docker-ce/linux/ubuntu \\</span></span>\n<span class=\"hljs-subst\"><span class=\"hljs-string\">$(lsb_release -cs)</span> stable&quot;</span> | sudo <span class=\"hljs-built_in\">tee</span> /etc/apt/sources.list.d/docker.list &gt; /dev/null</code></pre>\n\n<pre><code class=\"hljs bash\">sudo apt-get update  <span class=\"hljs-comment\"># 更新</span>\nsudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin  <span class=\"hljs-comment\"># 安装docker</span></code></pre>\n\n<h2 id=\"启动docker\"><a href=\"#启动docker\" class=\"headerlink\" title=\"启动docker\"></a>启动docker</h2><pre><code class=\"hljs bash\">systemctl <span class=\"hljs-built_in\">enable</span> docker  <span class=\"hljs-comment\"># 开机启动</span>\nsystemctl start docker  <span class=\"hljs-comment\"># 启动docker</span></code></pre>\n\n<h2 id=\"赋予用户权限\"><a href=\"#赋予用户权限\" class=\"headerlink\" title=\"赋予用户权限\"></a>赋予用户权限</h2><pre><code class=\"hljs bash\">sudo <span class=\"hljs-built_in\">chown</span> (yourname) /var/run/docker.sock</code></pre>\n\n<h2 id=\"配置镜像加速\"><a href=\"#配置镜像加速\" class=\"headerlink\" title=\"配置镜像加速\"></a>配置镜像加速</h2><p>登录<a href=\"https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors\">阿里云镜像加速</a>根据文档进行设置镜像加速。</p>\n<pre><code class=\"hljs bash\">sudo <span class=\"hljs-built_in\">mkdir</span> -p /etc/docker\nsudo <span class=\"hljs-built_in\">tee</span> /etc/docker/daemon.json &lt;&lt;-<span class=\"hljs-string\">&#x27;EOF&#x27;</span>\n&#123;\n  <span class=\"hljs-string\">&quot;registry-mirrors&quot;</span>: [<span class=\"hljs-string\">&quot;https://qt4gy4oh.mirror.aliyuncs.com&quot;</span>]\n&#125;\nEOF\nsudo systemctl daemon-reload\nsudo systemctl restart docker</code></pre>\n\n<h2 id=\"测试docker是否安装成功\"><a href=\"#测试docker是否安装成功\" class=\"headerlink\" title=\"测试docker是否安装成功\"></a>测试docker是否安装成功</h2><pre><code class=\"hljs bash\">docker run --<span class=\"hljs-built_in\">rm</span> hello-world</code></pre>\n<p>如果拉取失败，参考<a href=\"https://blog.csdn.net/macwinwin/article/details/113967667\">blog</a>可以选择执行以下步骤：</p>\n<ul>\n<li>修改DNS<pre><code class=\"hljs vim\"><span class=\"hljs-keyword\">vim</span> /etc/resolv.<span class=\"hljs-keyword\">conf</span></code></pre>\nnameserver改为8.8.8.8</li>\n<li>重新修改镜像仓库地址</li>\n</ul>\n<p>若执行了上述步骤，再次执行</p>\n<pre><code class=\"hljs bash\">sudo systemctl daemon-reload\nsudo systemctl restart docker\ndocker run --<span class=\"hljs-built_in\">rm</span> hello-world</code></pre>\n<p>这次应该就可以完美拉取了ヽ(✿ﾟ▽ﾟ)ノ</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>真是一场酣畅淋漓的docker安装啊Σ(っ °Д °;)っ</p>\n<p>由于桌面版比较简单，这里就不再赘述了(＠_＠;)</p>\n",
            "tags": [
                "docker"
            ]
        },
        {
            "id": "http://wanglanhuajiaofen.fun/2024/05/03/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BD%AF%E4%BB%B6%E6%8A%98%E8%85%BE/",
            "url": "http://wanglanhuajiaofen.fun/2024/05/03/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BD%AF%E4%BB%B6%E6%8A%98%E8%85%BE/",
            "title": "Openwrt UnblockNeteaseMusic使用记录",
            "date_published": "2024-05-02T16:00:00.000Z",
            "content_html": "<h1 id=\"起始\"><a href=\"#起始\" class=\"headerlink\" title=\"起始\"></a>起始</h1><p>最近搞了一个路由器，360t7，从咸鱼上收的二手，已经刷了openwrt系统(本来还想自己刷的(っ*´Д&#96;)っ雾)，然后今天就在搞各种路由器软件包，找到了luci-unblockneteasemusic后我十分心动，便开始着手配置，结果遇到各种问题，故记下此篇博客(～￣(OO)￣)ブ</p>\n<h2 id=\"Openwrt-UnblockNeteaseMusic-使用记录\"><a href=\"#Openwrt-UnblockNeteaseMusic-使用记录\" class=\"headerlink\" title=\"Openwrt UnblockNeteaseMusic 使用记录\"></a>Openwrt UnblockNeteaseMusic 使用记录</h2><p>unblockNeteaseMusic可以用来播放网易云音乐中的灰色歌曲，或者实现免vip播放会员歌曲等功能ヽ(✿ﾟ▽ﾟ)ノ<br>但是该软件包出的挺早的了，对于最新版的网易云音乐已经无法实现上述功能了(((φ(◎ロ◎;)φ)))<br>可能是最新版本网易云音乐做了奇奇怪怪的防护措施(-__-)&#x3D;@))&gt; o然后直接把这个东西给ban了。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"Setup\"><a href=\"#Setup\" class=\"headerlink\" title=\"Setup\"></a>Setup</h2><p>360t7路由器 237系统(LuCI openwrt-21.02 &#x2F; LuCI openwrt-21.02)<br><a href=\"https://github.com/UnblockNeteaseMusic/luci-app-unblockneteasemusic\">luci-unblockneteasemusic(JavaScript) 3.2</a> ps:也可以在luci管理页面下载<br><a href=\"https://www.lanzoui.com/ioPkInxh8yf\">网易云音乐2.7.2(上古版本)</a><br><a href=\"https://pan.baidu.com/s/18zVWFPHZ4PXaKgjc0LXMMg?pwd=8q64\">安卓极速版网易云音乐</a> 提取码:8q64</p>\n<h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2><ul>\n<li><p>下载好软件包后，在路由器luci设置页面选择服务，选中解除网易云音乐播放限制。</p>\n</li>\n<li><p>点击启用服务，其他选项可按照自己意愿选择。</p>\n</li>\n<li><p>开启进阶设置，在命令行输入</p>\n<pre><code class=\"hljs cmd\"><span class=\"hljs-built_in\">ping</span> music.<span class=\"hljs-number\">163</span>.com</code></pre>\n\n<p>然后将网易云音乐的ip复制，粘贴到网易云服务器ip。</p>\n</li>\n<li><p>设置&#x2F;下载证书及公钥私钥<br>参考链接<a href=\"https://github.com/nondanee/UnblockNeteaseMusic/issues/48#issuecomment-477870013\">证书下载</a><br>然后在luci设置页面选择自签发证书的公钥私钥为自签的公钥私钥。</p>\n</li>\n<li><p>附上我的配置图<br><img src=\"https://s2.loli.net/2024/05/04/Mob3xTjPWkhZGat.png\" alt=\"meow\"></p>\n</li>\n<li><p>在windows网易云音乐中设置代理，服务器为你的路由器ip，端口为5200(默认)，然后重启网易云音乐，即可实现开头提的功能。</p>\n</li>\n<li><p>如果还是不行，考虑将路由器的ipv6给禁用</p>\n<pre><code class=\"hljs shell\">/etc/init.d/odhcpd disable\n/etc/init.d/odhcpd stop</code></pre></li>\n<li><p><del>安卓端设置路由器wifi代理：PAC地址为http:&#x2F;&#x2F;你的路由器ip&#x2F;proxy.pac</del><br><del>ps：可以在设置前先登录你的账号，然后再设置代理，否则设置代理后你就无法登录了。</del><br><strong>上述方法会导致哔哩哔哩报错：无网络连接，其它app是否有这个问题暂时不清楚。</strong><br><strong>注：经本人测试，只要连接路由器WIFI，就可以实现上述功能，不需要设置代理。</strong></p>\n</li>\n<li><p>此时你就可以在连接你路由器局域网的情况下在windows和安卓机上面畅享  脚臭  了(&#x2F;&#x2F;&#x2F;￣皿￣)○～</p>\n</li>\n</ul>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>  花了很久很久才搞明白这个东西，一直遇到开启服务后网易云音乐会断网的问题怒ε&#x3D;怒ε&#x3D;( o｀ω′)ノ</p>\n<p>  查了很多很多资料，时间都挺早的，应该是大家最近搞这个软件包的人不多，然后我四面八方收集信息之后，终于找到了以上解决办法(ー&#96;´ー)</p>\n<p>  如果有问题可以联系我 ○|￣|_</p>\n",
            "tags": [
                "openwrt"
            ]
        },
        {
            "id": "http://wanglanhuajiaofen.fun/2024/04/29/QAuxiliary/",
            "url": "http://wanglanhuajiaofen.fun/2024/04/29/QAuxiliary/",
            "title": "QAuxiliary安装流程",
            "date_published": "2024-04-28T16:00:00.000Z",
            "content_html": "<h2 id=\"Attention\"><a href=\"#Attention\" class=\"headerlink\" title=\"Attention\"></a>Attention</h2><p>QAuxiliary安装是我第一次从头到尾都是自己一步一步摸索出来的（○｀ 3′○）<br>因此可能会有一些地方存在问题，可联系我进行更改(u‿ฺu✿ฺ)</p>\n<h3 id=\"需要提前下载的软件\"><a href=\"#需要提前下载的软件\" class=\"headerlink\" title=\"需要提前下载的软件\"></a>需要提前下载的软件</h3><ul>\n<li>LSPatch:用于将QAuxiliary模块插入的QQ的APK中。</li>\n<li>QAuxiliary:To make OICQ great again(๑•̀ㅂ•́)و✧!!!是一个基于QNotified的开源的Xposed框架。</li>\n<li>Shizuku(或许也用不到这个，雾):可以在未root情况下使一些app使用root权限。<span id=\"more\"></span></li>\n</ul>\n<h3 id=\"软件下载链接\"><a href=\"#软件下载链接\" class=\"headerlink\" title=\"软件下载链接\"></a>软件下载链接</h3><ul>\n<li><a href=\"https://github.com/LSPosed/LSPatch/releases\">LSPatch</a></li>\n<li><a href=\"https://github.com/cinit/QAuxiliary/releases\">QAuxiliary</a></li>\n<li><a href=\"https://github.com/RikkaApps/Shizuku/releases\">Shizuku</a></li>\n</ul>\n<h3 id=\"安装步骤\"><a href=\"#安装步骤\" class=\"headerlink\" title=\"安装步骤\"></a>安装步骤</h3><ul>\n<li>安装好上述三个软件ヽ(✿ﾟ▽ﾟ)ノ</li>\n<li>将当前QQ卸载，重新下载一个QQ的APK，并存放在一个指定目录，不用安装。</li>\n<li>打开Shizuku，按照软件提示来启动Shizuku服务。</li>\n<li>启动后给LSPatch软件开放权限。</li>\n<li>打开LSPatch，在下面这个页面点击＋号<img src=\"https://s2.loli.net/2024/04/29/sHk3aXmh1Wqp6Se.jpg\" alt=\"LSPatch step 1\"></li>\n<li>第一次操作需要先随便选择一个目录来存放被注入模块的APK的路径<img src=\"https://s2.loli.net/2024/04/29/lWJw7VHMnDLyCox.jpg\" alt=\"LSPatch step 2\"></li>\n<li>选择好后再选择刚刚下载的QQ APK，然后等待注入成功即可φ(≧ω≦*)♪</li>\n<li>注入成功后在QQ侧滑栏设置页面即可看到QAuxiliary选项，至此大功告成(๑•̀ㅂ•́)و✧</li>\n</ul>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>我好喜欢开源w(ﾟДﾟ)w，虽然还只是一个刚刚接触的小趴菜Σ( ° △ °|||)︴<br>伟大，无需多言Ψ(￣∀￣)Ψ！</p>\n",
            "tags": [
                "QAuxiliary"
            ]
        },
        {
            "id": "http://wanglanhuajiaofen.fun/2024/02/29/clash/",
            "url": "http://wanglanhuajiaofen.fun/2024/02/29/clash/",
            "title": "Ubuntu安装+配置clash",
            "date_published": "2024-02-28T16:00:00.000Z",
            "content_html": "<h1 id=\"Ubuntu23-10安装clash全过程-各种问题解决方案\"><a href=\"#Ubuntu23-10安装clash全过程-各种问题解决方案\" class=\"headerlink\" title=\"Ubuntu23.10安装clash全过程(各种问题解决方案)\"></a>Ubuntu23.10安装clash全过程(各种问题解决方案)</h1><!-- <font face=\"逐浪新宋\" color=grey size=6>该篇blog将详细描述自己在ubuntu系统下安装clash的过程和遇到的各种问题与bug_ o(￣ヘ￣o＃)</font> -->\n\n<hr>\n<h2 id=\"操作步骤\"><a href=\"#操作步骤\" class=\"headerlink\" title=\"操作步骤\"></a>操作步骤</h2><hr>\n<ul>\n<li>安装clash包<ul>\n<li><p>在终端中首先开启root权限</p>\n<pre><code class=\"hljs linux\">su</code></pre></li>\n</ul>\n</li>\n</ul>\n<span id=\"more\"></span>\n<ul>\n<li><p>在当前用户目录中创建名为clash的文件夹（名字自取即可）然后切换到该目录</p>\n<pre><code class=\"hljs linux\">mkdir ./clash\ncd ./clash</code></pre>\n</li>\n<li><p>下载clash的几种方式(因为clash作者删库跑路了，所以无法从作者的仓库中下载)</p>\n<ul>\n<li><p>wget + 下载url</p>\n  <pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">wget</span> https://github.com/Dreamacro/clash/releases/download/v1.<span class=\"hljs-number\">14</span>.<span class=\"hljs-number\">0</span>/clash-linux-amd64-v1.<span class=\"hljs-number\">14</span>.<span class=\"hljs-number\">0</span>.gz</code></pre>\n</li>\n<li><p>在ubuntu firefox浏览器找github备份仓库直接下载(考验你的网络(☆´益&#96;)c)</p>\n<ul>\n<li>这里我直接贴备用仓库的url   <a href=\"https://github.com/doreamon-design/clash/releases\" title=\"bushi\">备用仓库</a></li>\n<li>注意选择对应的版本<br><img src=\"https://s2.loli.net/2024/02/29/76kTCNn4QjL5ehA.png\" alt=\"这是我选的版本\" title=\"myversion\"></li>\n</ul>\n</li>\n<li><p>如果显示无法连接，则可能是系统代理的问题(对于我是这样(￣△￣；)),参考下面blog<br> <a href=\"https://blog.csdn.net/kids_budong_c/article/details/123479499,\" title=\"bushi\">这是解决大法!</a></p>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>解压clash包<br>我下载的clash包的后缀是.tar.gz<br>这里可能会遇到如下问题:<ul>\n<li>解压后tar后缀还在<br>解决方法:   <code>tar -zxvf 压缩文件名.tar.gz</code></li>\n<li>大部分教程给的都是gzip解压，这个方式对我不适用</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li><p>赋予权限</p>\n  <pre><code class=\"hljs linux\">chmod +x 解压缩后的文件名</code></pre></li>\n</ul>\n<hr>\n<ul>\n<li><p>移动</p>\n <pre><code class=\"hljs linux\">mv 解压缩后的文件名 /usr/local/bin/clash</code></pre></li>\n</ul>\n<hr>\n<ul>\n<li><p>查看版本</p>\n<pre><code class=\"hljs linux\">clash -v</code></pre>\n\n<ul>\n<li>如果这一步报错：无法执行二进制文件，那就是大概你下载的clash包有问题，我的解决方法是用上述第二种方式o(*≧▽≦)ツ┏━┓</li>\n</ul>\n<p>如果没有报错，正常显示出了clash版本号，那么到目前为止都非常顺利的成功了( ￣ー￣)人(^▽^ )</p>\n</li>\n</ul>\n<hr>\n<ul>\n<li>启动clash<ul>\n<li><p>启动clash</p>\n<pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">clash</span></code></pre>\n\n<p>这一步会显示系统缺失有些配置文件，自动会给你下载好</p>\n</li>\n<li><p>导入配置文件(配置文件获取方式不再赘述)<br>配置文件所在目录:</p>\n<pre><code class=\"hljs arduino\">$home/.config/clash/</code></pre>\n\n<p>.config为隐藏文件夹，对于不熟悉终端的小伙伴在图形界面的文件夹按下CTRL+H即可<br>将获得的配置文件改名为config.yaml替换上述目录中的config.yaml即可</p>\n</li>\n<li><p>重新启动clash</p>\n<pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">clash</span></code></pre>\n\n<p>此时会显示出你的订阅的相关信息，即表示成功<br><strong>在启动clash的条件下，访问以下链接可以进入clash图形控制页面</strong><br><a href=\"https://clash.razord.top/#/proxies\" title=\"就是我啦Σ(っ °Д °;)っ\">clash图形控制页面</a></p>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>Ubuntu系统网络代理设置<br><img src=\"https://s2.loli.net/2024/02/29/8INVmetSdK9gRWk.png\" alt=\"Alt text\"><br>这里我遇到一个问题是，我成功连接了梯子之后仍然翻不了墙，就一直在调这个代理设置，最终在按照上图输入之后可以了 <strong>但是我不知道是不是因为这个原因才成功的Ｏ(≧口≦)Ｏ</strong></li>\n</ul>\n<hr>\n<ul>\n<li>设置开机自启<ul>\n<li><p>复制以下片段</p>\n <pre><code class=\"hljs ini\"><span class=\"hljs-attr\">Description</span>=Clash - A rule-based tunnel in Go\n<span class=\"hljs-attr\">Documentation</span>=https://github.com/Dreamacro/clash/wiki\n<span class=\"hljs-section\">[Service]</span>\n<span class=\"hljs-attr\">OOMScoreAdjust</span>=-<span class=\"hljs-number\">1000</span>\n<span class=\"hljs-attr\">ExecStart</span>=/usr/local/bin/clash -f /home/rongrong/.config/clash/config.yaml <span class=\"hljs-comment\"># 注意这里要根据自己的配置路径进行相应的修改</span>\n<span class=\"hljs-attr\">Restart</span>=<span class=\"hljs-literal\">on</span>-failure\n<span class=\"hljs-attr\">RestartSec</span>=<span class=\"hljs-number\">5</span>\n<span class=\"hljs-section\">[Install]</span>\n<span class=\"hljs-attr\">WantedBy</span>=multi-user.target\n</code></pre>\n</li>\n<li><p>依次输入以下命令即可</p>\n <pre><code class=\"hljs bash\">\nsystemctl <span class=\"hljs-built_in\">enable</span> clash\nsystemctl start clash\n<span class=\"hljs-built_in\">echo</span> -e <span class=\"hljs-string\">&quot;export http_proxy=&lt;http://127.0.0.1:7890\\nexport&gt; https_proxy=&lt;http://127.0.0.1:7890&gt;&quot;</span> &gt;&gt; ~/.bashrc</code></pre></li>\n</ul>\n</li>\n</ul>\n<hr>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>ubuntu安装和配置clash确实是一个繁琐的过程，而网上的教程没有对一些问题的解决方案，我把自己在配置过程中遇到的问题写了出来，供大家参考!!!</p>\n<hr>\n<!-- <font face=\"逐浪新宋\" color=cyan size=10>谢啦!!☆⌒(*＾-゜)v</font> -->\n",
            "tags": [
                "clash"
            ]
        }
    ]
}